datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model FoodImage {
  id     Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  userId String
  foodId String
  url    String
  description String?
  likes     Int      @default(0)

  user User     @relation(fields: [userId], references: [id])
  food FoodInfo @relation(fields: [foodId], references: [id])

  @@index([userId])
  @@index([foodId])
}

model Review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  userId    String
  foodId    String
  rating    Int
  location  String
  meal      String
  text      String?
  likes     Int      @default(0)

  user User     @relation(fields: [userId], references: [id])
  food FoodInfo @relation(fields: [foodId], references: [id])

  @@index([userId])
  @@index([foodId])
}

model Recommendation {
  userId    String
  type      String
  createdAt DateTime @default(now())
  foodIds   String

  @@id([userId, type])
}

model Favorite {
  userId String
  foodId String

  user User     @relation(fields: [userId], references: [id])
  food FoodInfo @relation(fields: [foodId], references: [id])

  @@id([userId, foodId])
}

model FoodInfo {
  id                 String        @id @default(cuid())
  name               String        @unique @default("")
  mealEntries        mealDetails[]
  favorites          Favorite[]
  servingSize        String        @default("")
  ingredients        String        @default("")
  allergens          String        @default("")
  preferences        String        @default("")
  calories           Int           @default(0)
  caloriesFat        Int           @default(0)
  totalFat           Int           @default(0)
  saturatedFat       Int           @default(0)
  transFat           Int           @default(0)
  polyFat            Int           @default(0)
  monoFat            Int           @default(0)
  cholesterol        Int           @default(0)
  sodium             Int           @default(0)
  potassium          Int           @default(0)
  totalCarbohydrates Int           @default(0)
  fiber              Int           @default(0)
  sugars             Int           @default(0)
  protein            Int           @default(0)
  calciumDV          Int           @default(0)
  ironDV             Int           @default(0)
  Review             Review[]
  FoodImage          FoodImage[]
}

model mealDetails {
  id             Int      @id @default(autoincrement())
  diningHall     String   @default("")
  diningFacility String   @default("")
  mealType       String   @default("")
  dateServed     String   @default("")
  food           FoodInfo @relation(fields: [foodId], references: [id])
  foodId         String
}

model User {
  id          String      @id
  email       String      @unique
  name        String      @default("")
  isNew       Boolean     @default(true)
  preferences String      @default("")
  allergies   String      @default("")
  locations   String      @default("")
  goal        String      @default("")
  favorites   Favorite[]
  Review      Review[]
  FoodImage   FoodImage[]
}
